const SCRIPT_OWNER = "7ychu5";
const SCRIPT_TIME = "2023?12?11?10:32:19";
const SCRIPT_MAP = "5e_aimhub";
const SCRIPT_VERISON = "0.5";

/*
0.1?
    ????
    ??????????????????????
0.2?
    2023?12?11?10:33:45
    ?????????mode??

0.3:
    2023?12?20?14:07:24
    ????????????

0.4:
    ?????
    Fuck Valve
    Chinese all break,damn
0.5:
    2024年2月27日11:23:59
    Aim_rush模式制作
*/

import { Instance } from "serverpointentity"

var user = null

const scale_default = 0.16
const scale_increment = 0.01
var scale_times = 0

var mode = 0 //0 = warmup?? 1 = recoil?? 2 = kz?? 3 = hold?? 4 = peek??

var clip = 1
var display_clip = 0
var clip_display = 0
var clip_max_display = 0
var hit_num = 0
var miss_num = 0
var hit_num_1 = 0
var hit_num_2 = 0
var hit_num_3 = 0
var hit_num_4 = 0
var ip_status = 0 //0 = ???? 1 = ???? 2 = ?????
var mover_recoil_distance = 0

var prop_color = "255 0 0"
var scale_status = 0
var weapon_class = "weapon_ak47"
var weapon_primary = "weapon_ak47"
var weapon_secondary = "weapon_usp_silencer"


var time_start = 0
var time_end = 0

const weapon_clip = new Map([
    ["weapon_m249", 100],
    ["weapon_negev", 150],
    ["weapon_ak47", 30],
    ["weapon_aug", 30],
    ["weapon_famas", 25],
    ["weapon_galilar", 35],
    ["weapon_m4a1", 30],
    ["weapon_m4a1_silencer", 20],
    ["weapon_sg556", 30],
    ["weapon_mag7", 5],
    ["weapon_nova", 8],
    ["weapon_sawedoff", 7],
    ["weapon_xm1014", 7],
    ["weapon_bizon", 64],
    ["weapon_mac10", 30],
    ["weapon_mp5sd", 30],
    ["weapon_mp7", 30],
    ["weapon_mp9", 30],
    ["weapon_p90", 50],
    ["weapon_ump45", 25],
    ["weapon_awp", 5],
    ["weapon_g3sg1", 20],
    ["weapon_scar20", 20],
    ["weapon_ssg08", 10],
    ["weapon_usp_silencer", 12],
    ["weapon_cz75a", 12],
    ["weapon_deagle", 7],
    ["weapon_elite", 30],
    ["weapon_fiveseven", 20],
    ["weapon_glock", 20],
    ["weapon_hkp2000", 13],
    ["weapon_p250", 13],
    ["weapon_revolver", 8],
    ["weapon_tec9", 18],
])

// class weapon {
//     private _clip_max:number;
//     constructor(x:number){this._clip_max = x}
//     get clip_max():number{return this._clip_max}
// }

////////////////////////////

function printl(a) {Instance.Msg(a);}

function EntFire(targetname,key,value="",delay=0) {Instance.EntFireBroadcast(targetname,key,value,delay)}

////////////////////////////

Instance.InitialActivate(() => {
    Instance.Msg("/////////////////////////////////////////");
    Instance.Msg("/////////////////////////////////////////");
    Instance.Msg("/////////////////////////////////////////");
    Instance.Msg("/////////////////////////////////////////");
    Instance.Msg("//////////SourceTS is loading.../////////");
    Instance.Msg("/////////////////////////////////////////");
    Instance.Msg("/////////////////////////////////////////");
    Instance.Msg("/////////////////////////////////////////");
    Instance.Msg("/////////////////////////////////////////");

    var pawn = Instance.GetPlayerPawn(0);
    if (pawn) {
        Instance.Msg("got pawn");
        var controller = pawn.GetOriginalController();
        if (controller) {
            user = controller
            Instance.Msg("got controller");
        }
        else {
            Instance.Msg("no controller");
        }
    }
    else {
        Instance.Msg("no pawn");
    }
})

Instance.PublicMethod("user_respawn", /*none*/() => {
    _user_respawn();
})

function Dump(obj,name=""){
	Instance.Msg("Dump "+name+":")
	Instance.Msg(JSON.stringify(Object.keys(obj)))
	Instance.Msg(JSON.stringify(Object.getOwnPropertyNames(obj)))
}

function _user_respawn() {
    if(user != null)
    {
        let pawn = user.GetPlayer()
        let weapon = pawn.GetActiveWeapon().GetClassName().toString()
        let temp_weapon_class_1 = weapon_primary
        let temp_weapon_class_2 = weapon_secondary
        if(temp_weapon_class_1 == "weapon_m4a1_silencer") temp_weapon_class_1 = "weapon_m4a1"
        if(temp_weapon_class_1 == "weapon_mp5sd") temp_weapon_class_1 = "weapon_mp7"
        if(temp_weapon_class_2 == "weapon_usp_silencer") temp_weapon_class_2 = "weapon_hkp2000"
        if(temp_weapon_class_2 == "weapon_revolver") temp_weapon_class_2 = "weapon_deagle"
        if(temp_weapon_class_2 == "weapon_cz75a") temp_weapon_class_2 = "weapon_p250"
        printl(weapon_primary)
        printl(weapon_secondary)
        printl(weapon)
        if(weapon != temp_weapon_class_1 && weapon != temp_weapon_class_2)
        {
            pawn.DestroyWeapons();
            pawn.GiveNamedItem(weapon_primary);
            pawn.GiveNamedItem(weapon_secondary)
        }
    }
}

Instance.PublicMethod("change_mode", /*number*/(mode = 0) => {
    Instance.Msg(mode);
    _change_mode(mode);
})

function _change_mode(mode = 0) {
    switch (mode.toString()) {
        case "0":
            Instance.EntFireBroadcast("eventlistener_recoil_WeaponFire", "Disable")
            Instance.EntFireBroadcast("eventlistener_recoil_BulletImpact", "Disable")
            Instance.EntFireBroadcast("eventlistener_player_death_peek", "Disable")
            Instance.EntFireBroadcast("eventlistener_player_death_hold", "Disable")
            Instance.EntFireBroadcast("timer_WeaponFire", "Disable")
            Instance.EntFireBroadcast("relay_kill_ip_all", "Trigger")
            Instance.EntFireBroadcast("timer_display", "Disable")
            Instance.EntFireBroadcast("trigger_peek_confirm", "Disable")

            Instance.EntFireBroadcast("server", "Command", "sv_infinite_ammo 1")
            Instance.EntFireBroadcast("server", "Command", "bot_quota 9")
            Instance.EntFireBroadcast("spawn_bot_ct", "SetEnabled")
            Instance.EntFireBroadcast("spawn_bot_t", "SetEnabled")
            Instance.EntFireBroadcast("spawn_bot_dummy", "SetDisabled")
            _perceive_force_end()

            Instance.Msg("Switch mode to 0 = Warmup mode");
            mode = 0;
            break;

        case "1":
            Instance.EntFireBroadcast("relay_mode_recoil", "Trigger")
            _perceive_force_end()

            Instance.Msg("Switch mode to 1 = Recoil mode");
            
            mode = 1;
            break;

        case "2":
            Instance.Msg("Switch mode to 2 = KZ mode");
            _perceive_force_end()
            mode = 2;
            break;

        case "3":
            Instance.EntFireBroadcast("relay_mode_hold", "Trigger")
            _perceive_force_end()

            Instance.Msg("Switch mode to 3 = Hold mode");

            mode = 3;
            break;

        case "4":
            Instance.EntFireBroadcast("relay_mode_peek", "Trigger")
            _perceive_force_end()

            Instance.Msg("Switch mode to 4 = Peek mode");

            mode = 4;
            break;

        case "5":
            Instance.EntFireBroadcast("relay_mode_perceive", "Trigger")

            Instance.Msg("Switch mode to 5 = Perceive mode");

            mode = 5;
            break;
        default:
            Instance.Msg("change_mode(mode=0) ERROR. Call Author now pls");
            _change_mode(0);
            break;
    }
}


Instance.PublicMethod("peek_time_display",/*none*/() =>{
    Instance.EntFireBroadcast("worldtext_peek_time", "SetMessage", _time_calc(1).toString()+"ms")
})

function _time_calc(status = 0) {
    if(status == 0) time_start = Date.now()
    else{
        time_end = Date.now()
        let temp = time_end-time_start
        //Instance.Msg(temp)
        if(temp >= 9999) temp = 9999
        //Instance.Msg(temp)
        return temp
    }
    return 0;
}


Instance.PublicMethod("time_calc",/*number*/(status = 0) => {
    _time_calc(status);
    return;
})

var reflection_times = 10;
var reflection_present_times = 0;

var reflection_start_time = 0.0;
var reflection_end_time = 0.0;
var reflection_avg_time = 0.0;
var reflection_sum_time = 0.0;

var reflection_state = 0;

Instance.PublicMethod("reflection_button",/*none*/() =>{
    _reflection_button()
})

function _reflection_button() {
    Instance.Msg(typeof(reflection_state) + " is " + reflection_state);
    if(reflection_present_times >= reflection_times)
    {
        reflection_start_time = 0.0;
        reflection_end_time = 0.0;
        reflection_sum_time = 0.0;
        reflection_state = 0;
        reflection_present_times = 0;
        Instance.EntFireBroadcast("btn_reflection", "color", "255 255 255");
        Instance.EntFireBroadcast("reflection_relay", "FireUser1");
        Instance.EntFireBroadcast("worldtext_reflection_times", "SetMessage", reflection_present_times+" / "+reflection_times);
        return;
    }
    switch (reflection_state) {
        case 0://????
            reflection_state = 1;
            Instance.EntFireBroadcast("btn_reflection", "color", "255 255 255");
            Instance.EntFireBroadcast("reflection_relay", "FireUser1");
            Instance.EntFireBroadcast("worldtext_reflection_times", "SetMessage", reflection_present_times+" / "+reflection_times);
            _reflection_button();
            break;
        case 1://?????
            reflection_state = 3;
            Instance.EntFireBroadcast("btn_reflection", "Color", "255 0 0");
            Instance.EntFireBroadcast("reflection_relay", "FireUser2");
            Instance.EntFireBroadcast( "reflection_timer", "Enable" );
            break;
        case 2://????
            reflection_state = 1;
            reflection_end_time = Date.now();
            let reflection_time = (reflection_end_time - reflection_start_time)+" ms";
            reflection_sum_time += reflection_end_time - reflection_start_time;
            reflection_avg_time = reflection_sum_time/(reflection_present_times+1);
            reflection_present_times++;                                                            //????
            let dis_time = reflection_avg_time.toFixed(2)+" ms"; //?????
            Instance.EntFireBroadcast("btn_reflection", "color", "0 128 255");
            Instance.EntFireBroadcast("worldtext_reflection_times", "SetMessage", reflection_present_times+" / "+reflection_times);
            Instance.EntFireBroadcast("worldtext_reflection_time", "SetMessage", reflection_time);
            Instance.EntFireBroadcast("worldtext_reflection_avg", "SetMessage", dis_time);
            Instance.EntFireBroadcast("reflection_relay", "FireUser3");
            break;
        case 3://????
            reflection_state = 1;
            Instance.EntFireBroadcast("btn_reflection", "color", "255 255 255");
            Instance.EntFireBroadcast("reflection_relay", "FireUser4");
            Instance.EntFireBroadcast( "reflection_timer", "Disable" );
            //reflection_mode_on();
            break;

        default:
            Instance.Msg(typeof(reflection_state) + " is " + reflection_state);
            Instance.Msg("ERROR reflection_button,Call Author now pls");
            break;
    }
}

Instance.PublicMethod("reflection_timer_start", /*none*/() => {
    reflection_state = 2;
    Instance.EntFireBroadcast("btn_reflection", "color", "0 255 0");//????????
    reflection_start_time = Date.now();
    Instance.EntFireBroadcast("reflection_relay", "Trigger");//????????
})

Instance.PublicMethod("mover_recoil_move", /*number*/(x = 0) => {
    _mover_recoil_move(x);
})

var ball_time = 0.00
var ball_num = 0
var ball_status = 0
var ball_shoot = 0

Instance.PublicMethod("ball_game_start", /*none*/() => {
    _ball_time_clear();
    Instance.EntFireBroadcast("timer_ball", "Enable")
    Instance.EntFireBroadcast("eventlistener_weapon_fire_mg_ball", "Enable")
})
Instance.PublicMethod("ball_shoot_add", /*none*/() => {
    ball_shoot++
})

Instance.PublicMethod("ball_time_add", /*none*/() => {
    _ball_time_add();
})

Instance.PublicMethod("ball_time_clear", /*none*/() => {
    _ball_time_clear();
})

Instance.PublicMethod("ball_break", /*number*/(ball_type) => {
    _ball_break(ball_type);

})

Instance.PublicMethod("ball_game_over", /*none*/() => {
    _ball_game_over();

})


function _ball_time_add() {
    ball_time += 0.015625
    if(ball_time >= 60){
        _ball_game_over();
        return;
    }
    let temp = ball_time * 100
    let sec = temp / 100

    let msec = temp % 100

    if(ball_num == 1) ball_shoot = 1
    Instance.EntFireBroadcast("worldtext_ball_msec", "SetIntMessage", msec)
    Instance.EntFireBroadcast("worldtext_ball_sec", "SetIntMessage", sec)
    let temp_rate = ball_num/ball_shoot
    Instance.EntFireBroadcast("worldtext_ball_hit_rate", "SetIntMessage", temp_rate*100)

}

function _ball_game_over() {
    Instance.EntFireBroadcast("prop_ball_*", "kill")
    Instance.EntFireBroadcast("timer_ball", "Disable")
    Instance.EntFireBroadcast("eventlistener_weapon_fire_mg_ball", "Disable")
    Instance.EntFireBroadcast("worldtext_ball_msec", "SetIntMessage", 0)
    Instance.EntFireBroadcast("worldtext_ball_sec", "SetIntMessage", 60)
    Instance.EntFireBroadcast("btn_ball_start", "unlock")
    Instance.EntFireBroadcast("ambient_ball_over", "PlaySound")

    _ball_time_clear()
}

function _ball_time_clear() {
    ball_time = 0
    ball_num = 0
    ball_status = 0
    ball_shoot = 0
}

function _ball_break(ball_type) {
    if(ball_type == 0) Instance.EntFireBroadcast("prop_ball_small", "kill")
    else Instance.EntFireBroadcast("prop_ball_medium", "kill")

    ball_num++;
    Instance.EntFireBroadcast("mover_ball_1", "SetSpeed", getRandomInt(500))
    Instance.EntFireBroadcast("mover_ball_2", "SetSpeed", getRandomInt(500))
    Instance.EntFireBroadcast("worldtext_ball_num", "SetIntMessage", ball_num)

    if(ball_status == 0){
        Instance.EntFireBroadcast("ball_countdown_relay", "trigger")
        ball_status = 1
        Instance.EntFireBroadcast("mover_ball_1", "SetSpeed", getRandomIntBetween(1000,2000))
        Instance.EntFireBroadcast("mover_ball_2", "SetSpeed", getRandomIntBetween(1000,2000))
        Instance.EntFireBroadcast("relay_ball_spawn_" + ball_type, "trigger")
    }
    else{
        Instance.EntFireBroadcast("maker_ball_" + ball_type, "ForceSpawn")
    }

}


function _mover_recoil_move(x = 0) {
    let temp = x.toString();
    switch (temp) {
        case "0":mover_recoil_distance = 0;break;
        case "-1":mover_recoil_distance -= 1;break;
        case "1":mover_recoil_distance += 1;break;
    }
    if(mover_recoil_distance < 0) mover_recoil_distance = 0
    if(mover_recoil_distance > 16) mover_recoil_distance = 16

    let temp_message = (512 + mover_recoil_distance*64).toString() + "HU";
    Instance.EntFireBroadcast("worldtext_recoil_distance", "SetMessage", temp_message.toString())
    Instance.EntFireBroadcast("mover_recoil", "SetPosition", mover_recoil_distance.toString())

}

Instance.PublicMethod("ip_status_change",/*number*/(ip_mode = 0) => {

    Instance.Msg("ip_status switch to " + ip_mode);
    ip_status = ip_mode;

})

Instance.PublicMethod("scale_status_change",/*number*/(x = 0) => {
    let temp = x.toString()
    switch (temp) {
        case "0":scale_status = 0;break;
        case "-1":scale_status -= 1;break;
        case "-100":scale_status = -16;break;
        case "1":scale_status += 1;break;
    }
})

Instance.PublicMethod("prop_color_change",/*string*/(color = "255 255 255") => {
    prop_color = color
    Instance.Msg("ip_color is " + color);

})

Instance.PublicMethod("clip_max_change",/*number*/(x = 0) => {
    clip_max_display_change(x)
})

function clip_max_display_change(x = 0) {
    switch (x.toString()) {
        case "-1":clip_max_display -= 1;break;
        case "0":clip_max_display = weapon_clip.get(weapon_class);break;
        case "1":clip_max_display += 1;break;
    }
    Instance.EntFireBroadcast("text_clip_count", "SetIntMessage", clip_max_display.toString())



    clip_display = clip_max_display
    while(clip_display <= weapon_clip.get(weapon_class)){
        clip_display++;
        Instance.EntFireBroadcast("prop_recoil_target_"+ weapon_class + "_" + clip_display , "alpha", "0")
    }

}


Instance.PublicMethod("choose_gun",/*string*/(type="") => {
    display_clip = 0
    Instance.Msg(type);
    if(type == "weapon_usp_silencer"||
    type == "weapon_cz75a"||
    type == "weapon_deagle"||
    type == "weapon_elite"||
    type == "weapon_fiveseven"||
    type == "weapon_glock"||
    type == "weapon_hkp2000"||
    type == "weapon_p250"||
    type == "weapon_revolver"||
    type == "weapon_tec9"
    )choose_gun_pistol(type);
    else{choose_gun_rifle(type);}

})

function choose_gun_pistol(type){
    switch (type) {
        case "weapon_usp_silencer": weapon_class = "weapon_usp_silencer";weapon_secondary = "weapon_usp_silencer";printl("GET_weapon_usp_silencer");break;
        case "weapon_cz75a":        weapon_class = "weapon_cz75a";weapon_secondary = "weapon_cz75a";printl("GET_weapon_cz75a");break;
        case "weapon_deagle":       weapon_class = "weapon_deagle";weapon_secondary = "weapon_deagle";printl("GET_weapon_deagle");break;
        case "weapon_elite":        weapon_class = "weapon_elite";weapon_secondary = "weapon_elite";printl("GET_weapon_elite");break;
        case "weapon_fiveseven":    weapon_class = "weapon_fiveseven";weapon_secondary = "weapon_fiveseven";printl("GET_weapon_fiveseven");break;
        case "weapon_glock":        weapon_class = "weapon_glock";weapon_secondary = "weapon_glock";printl("GET_weapon_glock");break;
        case "weapon_hkp2000":      weapon_class = "weapon_hkp2000";weapon_secondary = "weapon_hkp2000";printl("GET_weapon_hkp2000");break;
        case "weapon_p250":         weapon_class = "weapon_p250";weapon_secondary = "weapon_p250";printl("GET_weapon_p250");break;
        case "weapon_revolver":     weapon_class = "weapon_revolver";weapon_secondary = "weapon_revolver";printl("GET_weapon_revolver");break;
        case "weapon_tec9":         weapon_class = "weapon_tec9";weapon_secondary = "weapon_tec9";printl("GET_weapon_tec9");break;

        default:                    printl("choose_gun_pistol(type) ERROR. Call Author now pls");break;
    };
    recoil_display_weapon();
    clip_max_display_change(0)
}

function choose_gun_rifle(type){
    switch (type) {
        case "weapon_ak47":         weapon_class = "weapon_ak47";weapon_primary = "weapon_ak47";printl("GET_weapon_ak47");break;
        case "weapon_m4a1":         weapon_class = "weapon_m4a1";weapon_primary = "weapon_m4a1";printl("GET_weapon_m4a1");break;
        case "weapon_m249":         weapon_class = "weapon_m249";weapon_primary = "weapon_m249";printl("GET_weapon_m249");break;
        case "weapon_negev":        weapon_class = "weapon_negev";weapon_primary = "weapon_negev";printl("GET_weapon_negev");break;
        case "weapon_aug":          weapon_class = "weapon_aug";weapon_primary = "weapon_aug";printl("GET_weapon_aug");break;
        case "weapon_famas":        weapon_class = "weapon_famas";weapon_primary = "weapon_famas";printl("GET_weapon_famas");break;
        case "weapon_galilar":      weapon_class = "weapon_galilar";weapon_primary = "weapon_galilar";printl("GET_weapon_galilar");break;
        case "weapon_m4a1_silencer":weapon_class = "weapon_m4a1_silencer";weapon_primary = "weapon_m4a1_silencer";printl("GET_weapon_m4a1_silencer");break;
        case "weapon_sg556":        weapon_class = "weapon_sg556";weapon_primary = "weapon_sg556";printl("GET_weapon_sg556");break;
        case "weapon_mag7":         weapon_class = "weapon_mag7";weapon_primary = "weapon_mag7";printl("GET_weapon_mag7");break;
        case "weapon_nova":         weapon_class = "weapon_nova";weapon_primary = "weapon_nova";printl("GET_weapon_nova");break;
        case "weapon_sawedoff":     weapon_class = "weapon_sawedoff";weapon_primary = "weapon_sawedoff";printl("GET_weapon_sawedoff");break;
        case "weapon_xm1014":       weapon_class = "weapon_xm1014";weapon_primary = "weapon_xm1014";printl("GET_weapon_xm1014");break;
        case "weapon_bizon":        weapon_class = "weapon_bizon";weapon_primary = "weapon_bizon";printl("GET_weapon_bizon");break;
        case "weapon_mac10":        weapon_class = "weapon_mac10";weapon_primary = "weapon_mac10";printl("GET_weapon_mac10");break;
        case "weapon_mp5sd":        weapon_class = "weapon_mp5sd";weapon_primary = "weapon_mp5sd";printl("GET_weapon_mp5sd");break;
        case "weapon_mp7":          weapon_class = "weapon_mp7";weapon_primary = "weapon_mp7";printl("GET_weapon_mp7");break;
        case "weapon_mp9":          weapon_class = "weapon_mp9";weapon_primary = "weapon_mp9";printl("GET_weapon_mp9");break;
        case "weapon_p90":          weapon_class = "weapon_p90";weapon_primary = "weapon_p90";printl("GET_weapon_p90");break;
        case "weapon_ump45":        weapon_class = "weapon_ump45";weapon_primary = "weapon_ump45";printl("GET_weapon_ump45");break;
        case "weapon_awp":          weapon_class = "weapon_awp";weapon_primary = "weapon_awp";printl("GET_weapon_awp");break;
        case "weapon_g3sg1":        weapon_class = "weapon_g3sg1";weapon_primary = "weapon_g3sg1";printl("GET_weapon_g3sg1");break;
        case "weapon_scar20":       weapon_class = "weapon_scar20";weapon_primary = "weapon_scar20";printl("GET_weapon_scar20");break;
        case "weapon_ssg08":        weapon_class = "weapon_ssg08";weapon_primary = "weapon_ssg08";printl("GET_weapon_ssg08");break;

        default:                    printl("choose_gun_rifle(type) ERROR. Call Author now pls");                  break;
    }
    recoil_display_weapon();
    clip_max_display_change(0)
}

function recoil_display_weapon() {
    EntFire("worldtext_recoil_weapon","SetMessage",weapon_class.toString().slice(7));
}

Instance.PublicMethod("event_BulletImpact",(event_data) => {
	if(event_data == null){
		//Instance.Msg("event_BulletImpact get NOTHING");
        return;
	}
	Instance.Msg(event_data.x);
    Instance.Msg(event_data.y);
    Instance.Msg(event_data.z);
    Instance.Msg("///////////////////////////////////");
})

Instance.PublicMethod("event_WeaponFire_recoil",() => {
    Instance.EntFireBroadcast("timer_WeaponFire", "ResetTimer")
    Instance.EntFireBroadcast("timer_WeaponFire", "Enable")
    scale_times = scale_default + scale_increment * scale_status
    Instance.Msg("scale_times(" + typeof(scale_times) + ") is " + scale_times)
    if(scale_times < 0)
    {
        scale_times = 0;
    }
    switch (ip_status.toString()) {
        case "0":
            Instance.EntFireBroadcast("prop_recoil_target_"+ weapon_class + "_" + clip , "color", prop_color)
            let temp_clip0 = clip + 1
            while(temp_clip0 <= weapon_clip.get(weapon_class)){
                temp_clip0++;
                Instance.EntFireBroadcast("prop_recoil_target_"+ weapon_class + "_" + temp_clip0 , "SetScale", scale_times.toString())
            }

            break;
        case "1":
            Instance.EntFireBroadcast("prop_recoil_target_"+ weapon_class + "_" + clip , "color", prop_color)
            clip++;
            Instance.EntFireBroadcast("prop_recoil_target_"+ weapon_class + "_" + clip , "color", "255 0 0")
            clip--;
            let temp_clip1 = clip + 1
            while(temp_clip1 <= weapon_clip.get(weapon_class)){
                temp_clip1++;
                Instance.EntFireBroadcast("prop_recoil_target_"+ weapon_class + "_" + temp_clip1 , "SetScale", scale_times.toString())
            }
            break;
        case "2":
            Instance.EntFireBroadcast("prop_recoil_target_"+ weapon_class + "_" + clip , "color", prop_color)
            clip--;
            Instance.EntFireBroadcast("prop_recoil_target_"+ weapon_class + "_" + clip , "alpha", "0")
            clip++;
            let temp_clip2 = clip + 1
            while(temp_clip2 <= weapon_clip.get(weapon_class)){
                temp_clip2++;
                Instance.EntFireBroadcast("prop_recoil_target_"+ weapon_class + "_" + temp_clip2 , "SetScale", scale_times.toString())
            }
            break;
        default:
            Instance.Msg(typeof(ip_status) + " is " + ip_status);
            Instance.Msg("ERROR ip status,Call Author now pls");
            break;
    }

    if(clip == weapon_clip.get(weapon_class)){
        let pawn = user.GetPlayer()
        pawn.DestroyWeapons();
        pawn.GiveNamedItem(weapon_primary);
        pawn.GiveNamedItem(weapon_secondary);
    }
    clip++;
})


Instance.PublicMethod("event_WeaponOutOfAmmo",() => {

    Instance.Msg("event_WeaponOutOfAmmo");

})

Instance.PublicMethod("reset_timer",() => {

    //Instance.EntFireBroadcast("server", "sv_infinite_ammo 1", "", 0.00)
    //Instance.EntFireBroadcast("server", "sv_infinite_ammo 2", "", 0.02)
    clip = 1
    hit_num = 0;hit_num_1 = 0;hit_num_2 = 0;hit_num_3 = 0;hit_num_4 = 0
    miss_num = 0
    Instance.EntFireBroadcast("prop_recoil_target_*", "alpha", "255")
    clip_max_display_change(clip_max_display)
    Instance.EntFireBroadcast("prop_recoil_target_*", "color", "255 255 255")
    Instance.EntFireBroadcast("prop_recoil_target_*", "SetScale", scale_times.toString())
    //Instance.EntFireBroadcast("text_num_hit", "SetIntMessage", hit_num.toString())
    //Instance.EntFireBroadcast("text_num_miss", "SetIntMessage", miss_num.toString())

})

Instance.PublicMethod("shoothit",() => {
    hit_num++;
    //Instance.EntFireBroadcast("server", "sv_infinite_ammo 1", "", 0.00)
    //Instance.EntFireBroadcast("server", "sv_infinite_ammo 2", "", 0.02)
    Instance.EntFireBroadcast("text_num_hit", "SetIntMessage", hit_num.toString())
    Instance.EntFireBroadcast("text_num_miss", "SetIntMessage", miss_num.toString())

})

Instance.PublicMethod("shoothit_1",() => {
    hit_num_1++;
    Instance.EntFireBroadcast("text_num_hit_1", "SetIntMessage", hit_num_1.toString())
    Instance.EntFireBroadcast("text_num_hit_2", "SetIntMessage", hit_num_2.toString())
    Instance.EntFireBroadcast("text_num_hit_3", "SetIntMessage", hit_num_3.toString())
    Instance.EntFireBroadcast("text_num_hit_4", "SetIntMessage", hit_num_4.toString())
})
Instance.PublicMethod("shoothit_2",() => {
    hit_num_2++;
    Instance.EntFireBroadcast("text_num_hit_1", "SetIntMessage", hit_num_1.toString())
    Instance.EntFireBroadcast("text_num_hit_2", "SetIntMessage", hit_num_2.toString())
    Instance.EntFireBroadcast("text_num_hit_3", "SetIntMessage", hit_num_3.toString())
    Instance.EntFireBroadcast("text_num_hit_4", "SetIntMessage", hit_num_4.toString())
})
Instance.PublicMethod("shoothit_3",() => {
    hit_num_3++;
    Instance.EntFireBroadcast("text_num_hit_1", "SetIntMessage", hit_num_1.toString())
    Instance.EntFireBroadcast("text_num_hit_2", "SetIntMessage", hit_num_2.toString())
    Instance.EntFireBroadcast("text_num_hit_3", "SetIntMessage", hit_num_3.toString())
    Instance.EntFireBroadcast("text_num_hit_4", "SetIntMessage", hit_num_4.toString())
})
Instance.PublicMethod("shoothit_4",() => {
    hit_num_4++;
    Instance.EntFireBroadcast("text_num_hit_1", "SetIntMessage", hit_num_1.toString())
    Instance.EntFireBroadcast("text_num_hit_2", "SetIntMessage", hit_num_2.toString())
    Instance.EntFireBroadcast("text_num_hit_3", "SetIntMessage", hit_num_3.toString())
    Instance.EntFireBroadcast("text_num_hit_4", "SetIntMessage", hit_num_4.toString())
})

Instance.PublicMethod("shootmiss",() => {
    miss_num++;
    //Instance.EntFireBroadcast("server", "sv_infinite_ammo 1", "", 0.00)
    //Instance.EntFireBroadcast("server", "sv_infinite_ammo 2", "", 0.02)
    Instance.EntFireBroadcast("text_num_miss", "SetIntMessage", miss_num.toString())
    Instance.EntFireBroadcast("text_num_hit", "SetIntMessage", hit_num.toString())

})

Instance.PublicMethod("recoil_display_ip_perfab",() => {
    _recoil_display_ip_perfab();
})

function _recoil_display_ip_perfab() {
    if(display_clip >= weapon_clip.get(weapon_class)){
        Instance.EntFireBroadcast("prop_recoil_display_"+ weapon_class + "_*" , "color", "255 255 255")
        display_clip = 0;
    }
    display_clip++;
    Instance.EntFireBroadcast("prop_recoil_display_"+ weapon_class + "_" + display_clip , "color", prop_color)
}

//////////////////////////////////////////////////
////////////////////perceive//////////////////////
//////////////////////////////////////////////////
var perceive_count = 0
var perceive_count_max = 10
var perceive_time_sum = 0
var perceive_time_avg = 0
var perceive_time_1 = 0
var perceive_time_2 = 0
var perceive_hit = 0
var perceive_fire = 0
var perceive_hit_rate = 100

Instance.PublicMethod("perceive_clear",() => {
    _perceive_clear();
})

function _perceive_clear() {
    perceive_count = 0
    perceive_time_sum = 0
    perceive_time_avg = 0
    perceive_time_1 = 0
    perceive_time_2 = 0
    perceive_hit = 0
    perceive_fire = 0
    perceive_hit_rate = 100
    EntFire("relay_mode_perceive_not","trigger")

    EntFire("btn_perceive_start","unlock")
    //EntFire("fog_controller","setfogstartdistance","4096")
    //EntFire("fog_controller","setfogenddistance","10240")
    //EntFire("fog_controller","setfogcolor","192 192 192")
    EntFire("perceive_rotating","stop")

    EntFire("perceive_text_times","SetMessage","0/10")
    EntFire("perceive_text_time","SetMessage","0s")
    EntFire("perceive_text_rate","SetMessage","100%")
}

Instance.PublicMethod("perceive_start",() => {
    _perceive_start();
})

function _perceive_start() {

    if(perceive_count >= perceive_count_max){
        EntFire("btn_bot_kill","press")
    }

    EntFire("perceive_ambient","kill")
    EntFire("perceive_text_times","SetMessage",perceive_count.toString()+"/10")

    EntFire("perceive_rotating","start")
    EntFire("perceive_mover","open")
    EntFire("eventlistener_weaponfire_perceive","Enable")

    EntFire("eventlistener_playerdeath_perceive","Enable")
    EntFire("perceive_rotating","SetSpeed",getRandomIntBetween(0.01,1.99).toString(),0.01)
    EntFire("perceive_mover","SetSpeed",getRandomIntBetween(100,500).toString(),0.01)


   // EntFire("fog_controller","setfogcolor","4 8 12")
   // EntFire("fog_controller","setfogstartdistance","64")
   // EntFire("fog_controller","setfogenddistance","128")


    let spawn_time = getRandomIntBetween(1.00,2.00)
    EntFire("maker_perceive","ForceSpawn","",spawn_time)
    perceive_time_1 = Date.now()+spawn_time*100
    if(perceive_count <0 || perceive_count >10)
    {
        EntFire("telepoet_dest_perceive_bot","kill","",spawn_time+0.01)
        EntFire("perceive_ambient","kill","",spawn_time+0.01)
    }
}

Instance.PublicMethod("perceive_bot_coming",() => {
    _perceive_bot_coming();
})

function _perceive_bot_coming() {
    perceive_fire++
    //EntFire("fog_controller","setfogstartdistance","2048")
    //EntFire("fog_controller","setfogenddistance","4096")
    EntFire("trigger_teleport_bot","Enable")
    EntFire("trigger_teleport_bot","Disable","",0.02)
    EntFire("eventlistener_playerhurt_perceive","Enable")
}

Instance.PublicMethod("perceive_next",() => {
    _perceive_next();
})

function _perceive_next() {
    perceive_fire--
    if(perceive_count < perceive_count_max) perceive_count++
    else{
        EntFire("perceive_sound_end","StartSound")
        _perceive_end();
        //_perceive_force_end();
        return;
    }
    EntFire("eventlistener_playerhurt_perceive","Disable")
    EntFire("eventlistener_playerdeath_perceive","Disable")
    perceive_time_2 = Date.now();
    perceive_time_sum += perceive_time_2 - perceive_time_1;

    EntFire("perceive_text_time","SetMessage",(perceive_time_sum/1000/perceive_count).toFixed(2).toString()+"s")

    let temp = ((perceive_hit/perceive_fire)*100).toFixed(2)
    EntFire("perceive_text_rate","SetMessage",temp.toString()+"%")

    EntFire("telepoet_dest_perceive_bot","kill")
    EntFire("perceive_ambient","kill")

    EntFire("point_script","perceive_start","",2.0)
}

Instance.PublicMethod("perceive_hit",() => {
    _perceive_hit();
})

function _perceive_hit() {
    perceive_hit++
}

Instance.PublicMethod("perceive_end",() => {
    _perceive_end();
})

function _perceive_end() {

    _perceive_clear();
    //
}

Instance.PublicMethod("perceive_force_end",() => {
    _perceive_force_end();
})

function _perceive_force_end() {

    EntFire("btn_bot_kill","press","",0.01);
    EntFire("perceive_ambient","kill")
    perceive_count = 11
    //
}


//////////////////////////////////////////////////
//////////////////////////////////////////////////
//////////////////////////////////////////////////



function getRandomInt(max) {
    let temp = Math.floor(Math.random() * max)
    if(temp == 0) temp++
    return temp;
}

function getRandomIntBetween(min, max) {
    return Math.floor(Math.random() * (max - min + 1) ) + min;
}


/* recoil_info
//////////weapon_ak47//////////
0	-0.358	64.813
0	-1.948	65.375
0	1.799	75.432
0	-0.103	89.767
0	-2.602	105.316
0	3.814	104.92
0	7.365	130.833
0	13.155	143.744
0	6.452	154.857
0	-13.896	146.865
0	-23.285	147.964
0	-18.1	155.419
0	-25.832	154.141
0	-37.016	154.414
0	-39.458	154.726
0	-19.278	155.459
0	-11.432	157.35
0	-5.435	162.125
0	9.463	161.747
0	24.848	159.161
0	14.492	156.811
0	17.507	144.475
0	12.399	164.688
0	8.454	166.838
0	16.995	163.862
0	25.477	163.34
0	11.602	146.603
0	-5.81	164.954
0	-24.858	158.287
0	-32.967	155.283
//////////weapon_m4a4//////////
0	0.125	64.054
0	1.397	66.251
0	-1.241	69.891
0	0.54	78.667
0	-0.201	91.81
0	-2.047	102.8
0	-2.961	113.457
0	2.921	122.339
0	5.553	128.133
0	19.723	127.023
0	14.263	132.548
0	7.372	138.493
0	-6.908	132.704
0	-19.215	130.165
0	-27.29	130.956
0	-29.993	133.96
0	-24.171	138.641
0	-30.73	135.596
0	-37.547	135.869
0	-37.269	134.456
0	-21.514	134.1
0	-12.854	138.999
0	-4.975	138.8
0	0.787	139.286
0	4.929	144.515
0	-0.312	143.012
0	1.517	142.816
0	6.813	142.082
0	5.028	150.397
0	6.769	142.523
//////////weapon_m4a1//////////
0	-0.095	64.04
0	0.372	66.132
0	1.185	65.831
0	-0.965	74.589
0	0.132	81.193
0	-0.657	91.741
0	-4.895	100.81
0	3.588	105.669
0	6.542	111.731
0	14.882	111.2
0	12.06	112.996
0	5.938	116.092
0	-9.099	119.058
0	-15.046	115.298
0	-22.844	113.398
0	-22.477	116.733
0	-19.069	115.949
0	-20.753	119.169
0	-29.34	116.482
0	-26.746	117.219
//////////weapon_aug//////////
0	-0.239	64.187
0	1.83	64.154
0	0.374	67.324
0	-0.461	79.531
0	-3.493	90.037
0	-2.127	99.504
0	1.246	110.961
0	9.442	119.788
0	9.556	124.463
0	16.358	124.949
0	6.622	131.228
0	5.954	133.328
0	12.73	136.341
0	14.967	133.631
0	4.341	134.888
0	-11.638	130.653
0	-24.32	127.271
0	-23.027	126.6
0	-24.038	131.123
0	-27.988	132.885
0	-16.843	131.554
0	-2.929	130.405
0	3.474	134.68
0	-2.815	136.309
0	4.636	133.385
0	18.778	132.777
0	24.488	129.545
0	13.367	131.474
0	8.227	131.057
0	5.916	133.275
//////////weapon_ssg53//////////
0	0.454	64.476
0	-3.09	65.872
0	-5.787	71.834
0	-9.119	83.695
0	-14.548	95.169
0	-17.306	107.822
0	-18.692	119.28
0	-25.188	126.297
0	-19.231	130.14
0	-21.374	133.206
0	-28.007	133.409
0	-29.346	133.57
0	-29.259	139.273
0	-29.633	140.162
0	-28.723	141.654
0	-37.255	141.375
0	-44.691	131.639
0	-48.236	127.506
0	-50.371	128.298
0	-31.625	130.96
0	-5.715	127.394
0	8.975	127.814
0	11.854	132.855
0	15.093	134.009
0	19.761	141.068
0	26.831	139.865
0	38.333	135.569
0	27.687	139.053
0	20.722	141.33
0	2.502	140.069
//////////weapon_famas/////////
0	-0.605	63.665
0	-2.425	64.984
0	-0.384	64.383
0	-5.731	72.637
0	-8.13	83.794
0	-4.366	93.139
0	3.748	98.317
0	12.625	103.035
0	3.438	111.393
0	-0.032	112.034
0	-13.489	118.966
0	-15.06	115.388
0	-16.521	123.556
0	-1.477	124.413
0	0.671	123.456
0	12.731	117.585
0	13.896	123
0	23.293	124.371
0	21.387	127.913
0	19.751	125.036
0	9.416	128.866
0	8.765	125.824
0	12.219	125.507
0	21.537	121.143
0	28.95	118.475
//////////weapon_galilar//////////
0	0.942	64.202
0	1.127	66.159
0	0.234	68.95
0	4.38	72.665
0	11.92	81.048
0	9.515	88.827
0	9.641	101.878
0	12.958	111.019
0	18.913	116.886
0	16.786	118.957
0	4.239	122.391
0	-7.916	124.201
0	-27.162	116.047
0	-28.759	122.934
0	-32.819	123.176
0	-34.289	122.047
0	-36.166	123.548
0	-34.171	127.213
0	-17.507	130.223
0	-18.069	135.096
0	-8.725	128.704
0	13.18	124.247
0	12.94	128.978
0	9.956	126.834
0	13.514	128.21
0	21.835	126.858
0	29.777	124.802
0	23.917	130.167
0	10.63	123.128
0	-8.987	128.3
0	-12.989	126.664
0	-8.4	127.434
0	-13.827	124.539
0	-25.809	123.874
0	-34.943	121.061
//////////weapon_mp9//////////
0	-0.382	63.953
0	-0.91	65.272
0	0.713	66.957
0	0.917	72.635
0	-0.769	81.581
0	5.049	92.489
0	3.423	103.665
0	0.245	113.23
0	3.447	120.678
0	11.54	124.752
0	25.36	124.078
0	37.409	123.919
0	36.696	129.744
0	37.78	131.266
0	24.909	134.93
0	21.801	137.654
0	10.517	142.397
0	4.617	144.228
0	-5.919	144.177
0	-19.452	139.619
0	-15.576	142.053
0	-7.921	142.122
0	1.445	143.633
0	0.351	145.009
0	-5.834	143.29
0	-18.789	136.157
0	-21.042	142.795
0	-28.145	144.382
0	-24.223	146.917
0	-20.068	145.937
//////////weapon_mac10//////////
0	-0.863	64.409
0	-2.173	63.342
0	-1.33	63.908
0	0.559	67.635
0	1.839	77.75
0	3.38	85.432
0	12.026	92.589
0	16.459	106.362
0	13.605	113.837
0	15.315	117.458
0	16.917	123.913
0	21.837	126.077
0	21.024	134.678
0	20.127	136.981
0	15.217	135.013
0	7.194	135.559
0	-5.195	132.151
0	-7.494	134.416
0	-12.616	133.296
0	-17.455	134.063
0	-12.351	132.675
0	-23.322	129.335
0	-24.937	130.167
0	-25.633	130.596
0	-20.067	134.09
0	-8.249	131.961
0	-0.028	127.79
0	-0.366	130.645
0	-2.794	129.688
0	-5.438	128.816
//////////weapon_ump45//////////
0	-0.342	61.41
0	-0.689	63.934
0	-0.737	68.431
0	-0.136	82.034
0	-4.161	88.972
0	-10.788	103.122
0	-11.36	111.467
0	-5.521	121.631
0	-5.317	127.443
0	-1.581	132.7
0	6.804	135.892
0	12.449	138.255
0	13.432	139.893
0	15.83	140.446
0	13.819	146.621
0	21.339	142.879
0	20.834	145.37
0	17.614	141.338
0	11.841	144.891
0	7.741	147.72
0	10.476	143.945
0	19.088	143.204
0	16.416	141.316
0	11.042	140.917
0	11.704	145.053
//////////weapon_mp7//////////
0	-0.47	64.58
0	1.102	65.507
0	0.239	64.35
0	-0.917	69.333
0	-2.494	73.119
0	-5.742	80.541
0	-6.412	87.565
0	-11.316	91.931
0	-17.424	99.754
0	-19.264	102.408
0	-23.046	104.471
0	-18.378	110.091
0	-8.911	109.417
0	-0.164	110.376
0	7.741	110.937
0	5.5	112.201
0	3.501	114.346
0	3.355	114.878
0	-1.17	118.752
0	0.684	121.86
0	0.039	119.636
0	-6.211	116.273
0	-16.39	112.015
0	-16.1	113.182
0	-23.713	111.57
0	-22.272	111.463
0	-20.987	112.594
0	-21.151	111.471
0	-24.579	113.658
0	-23.213	111.353

//////////weapon_bizon//////////
0	0.389	63.781
0	-0.19	64.538
0	-2.55	66.832
0	-1.387	67.715
0	-6.625	74.909
0	-14.877	82.874
0	-11.202	92.626
0	-7.238	101.796
0	-6.359	108.066
0	2.566	114.067
0	8.958	115.022
0	12.77	119.928
0	13.648	120.06
0	14.793	123.706
0	4.254	119.89
0	0.568	125.793
0	6.447	121.706
0	12.783	124.319
0	11.324	128.713
0	13.368	130.905
0	20.522	126.826
0	26.718	126.37
0	29.441	121.268
0	30.829	125.595
0	36.584	123.018
0	35.186	120.503
0	33.501	125.136
0	32.461	125.009
0	30.555	128.557
0	20.716	126.343
0	23.327	126.264
0	18.477	129.334
0	23.779	128.669
0	16.513	127.773
0	17.978	124.026
0	20.367	127.873
0	10.498	124.794
0	15.426	124.169
0	13.501	126.083
0	13.472	127.291
0	22.869	125.414
0	27.743	122.994
0	32.14	119.579
0	34.832	121.573
0	29.576	121.174
0	32.018	119.778
0	36.367	119.533
0	41.315	117.579
0	31.465	122.724
0	24.534	126.191
0	21.112	123.977
0	23.38	120.139
0	26.516	120.125
0	25.692	124.279
0	30.734	121.732
0	22.699	122.847
0	18.615	124.654
0	12.783	124.658
0	-3.862	120.298
0	-3.788	124.811
0	-3.197	126.496
0	2.682	127.162
0	-1.274	123.326
0	-3.09	122.273

//////////weapon_p90//////////
0	-0.229	64.12
0	-0.796	65.582
0	0.424	65.423
0	-1.181	66.753
0	-1.476	75.951
0	-5.874	82.693
0	-12.519	93.056
0	-18.89	95.433
0	-15.671	100.65
0	-8.854	108.87
0	-10.501	115.744
0	-7.392	119.638
0	-6.586	121.992
0	-14.151	122.794
0	-17.283	120.711
0	-19.921	127.918
0	-25.04	125.855
0	-19.367	129.611
0	-14.653	130.135
0	-3.232	129.783
0	-1.841	124.756
0	4.817	124.31
0	9.233	127.238
0	9.796	125.757
0	11.506	127.949
0	8.064	128.83
0	-4.587	127.207
0	-10.804	122.238
0	-12.104	125.855
0	-6.908	128.13
0	-10.043	129.606
0	-8.921	131.034
0	-12.025	133.196
0	-2.576	128.233
0	5.488	131.778
0	2.907	132.67
0	-0.068	133.776
0	-3.741	133.032
0	-13.21	134.13
0	-11.715	129.214
0	-4.906	131.718
0	7.378	128.141
0	9.974	128.291
0	14.125	129.474
0	19.926	126.88
0	22.591	126.854
0	31.817	128.031
0	29.494	125.602
0	25.429	130.188
0	22.535	126.861

//////////weapon_mp5sd//////////
`0	0.42	64.989
0	0.675	65.896
0	-1.295	66.019
0	-1.782	67.743
0	-6.363	72.264
0	-5.29	77.356
0	-11.404	88.185
0	-13.111	95.307
0	-15.279	99.226
0	-17.113	101.881
0	-22.055	105.715
0	-21.141	108.234
0	-8.707	111.967
0	-0.247	109.873
0	5.313	109.175
0	5.616	110.955
0	1.726	113.849
0	3.495	115.585
0	0.932	119.46
0	-0.333	119.125
0	1.3	121.113
0	-10.442	116.927
0	-15.221	113.772
0	-17.295	114.109
0	-22.715	111.062
0	-21.833	112.001
0	-22.862	115.092
0	-24.929	113.103
0	-22.779	113.561
0	-23.383	113.183`

//////////weapon_cz75a//////////
0	-0.802	63.831
0	-2.061	68.329
0	-11.342	66.981
0	-10.58	80.76
0	3.055	80.526
0	21.46	95.103
0	2.587	102.415
0	-13.009	121.356
0	-22.843	129.709
0	-14.563	133.179
0	-12.444	139.398
0	-19.549	145.024

*/

///////////////////////////////////////
///////////////////////////////////////
///////////////////////////////////////
var color_light_screen_r = 0
var color_light_screen_g = 0
var color_light_screen_b = 255
var color_change_status = 1 //1 = g++ ; 2 = b-- ; 3 = r++ ;

Instance.PublicMethod("light_screen_change", /*none*/() => {
    _light_screen_change();
})

function _light_screen_change() {
    switch (color_change_status) {
        case 1:
            if(color_light_screen_g >= 255) color_change_status = 2
            color_light_screen_g+=10
            break;
        case 2:
            if(color_light_screen_b <= 0) color_change_status = 3
            color_light_screen_b-=10
            break;
        case 3:
            if(color_light_screen_r >= 255){
                color_change_status = 1
                color_light_screen_r = 0
                color_light_screen_g = 0
                color_light_screen_b = 255
            }
            color_light_screen_r+=10
            break;
        default:
            Instance.Msg("light_screen_change ERROR,Call Author now pls");
            break;
    }
    if(color_light_screen_r > 255) color_light_screen_r = 255
    if(color_light_screen_r < 0) color_light_screen_r = 0
    if(color_light_screen_g > 255) color_light_screen_g = 255
    if(color_light_screen_g < 0) color_light_screen_g = 0
    if(color_light_screen_b > 255) color_light_screen_b = 255
    if(color_light_screen_b < 0) color_light_screen_b = 0
    let color = color_light_screen_r + " " + color_light_screen_g + " " + color_light_screen_b
    EntFire("light_screen", "SetColor", color.toString())
}